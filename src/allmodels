# dashboard
from django.db import models
from cinema.models import SeoBlock, Cinema


class MainPage(models.Model):
    phone_1 = models.CharField(max_length=20)
    phone_2 = models.CharField(max_length=20)
    seo_text = models.TextField()
    is_active = models.BooleanField(default=True)
    language = models.CharField(
        max_length=2, choices=[("ru", "Русский"), ("uk", "Українська")]
    )
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)


class Page(models.Model):
    title = models.CharField(max_length=200)
    slug = models.SlugField()
    content = models.TextField()
    image = models.ImageField(upload_to="static_pages/", null=True, blank=True)
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)


class ContactPage(models.Model):
    is_active = models.BooleanField(default=True)
    language = models.CharField(
        max_length=2, choices=[("ru", "Русский"), ("uk", "Українська")]
    )
    cinema = models.OneToOneField(Cinema, on_delete=models.CASCADE)
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)


class BannerImage(models.Model):
    image = models.ImageField(upload_to="banners/", null=True, blank=True)
    is_background = models.BooleanField(default=False)


class MainUpperBanner(models.Model):
    link = models.URLField()
    text = models.CharField(max_length=255)
    position = models.PositiveIntegerField()
    rotation_speed = models.PositiveIntegerField()
    is_active = models.BooleanField(default=True)
    image = models.ManyToManyField(BannerImage)


class BgBanner(models.Model):
    is_image_background = models.BooleanField(default=False)
    is_active = models.BooleanField(default=True)
    image = models.ImageField(upload_to="background_banners/", null=True, blank=True)


class NewsPromoBanner(models.Model):
    link = models.URLField()
    text = models.CharField(max_length=255)
    position = models.PositiveIntegerField()
    rotation_speed = models.PositiveIntegerField()
    is_active = models.BooleanField(default=True)
    image = models.ManyToManyField(BannerImage)


# cinema
from django.db import models


class SeoBlock(models.Model):
    title = models.CharField(max_length=200)
    description = models.TextField()
    keywords = models.CharField(max_length=200)
    slug = models.SlugField()

    def __str__(self):
        return self.title


class Image(models.Model):
    image = models.ImageField(upload_to="gallery/", null=True, blank=True)
    alt_text = models.CharField(max_length=255)
    created_at = models.DateTimeField(auto_now_add=True)


class Cinema(models.Model):
    name = models.CharField(max_length=100)
    slug = models.SlugField()
    city = models.CharField(max_length=100)
    address = models.TextField()
    phone_number = models.CharField(max_length=20)
    description = models.TextField()
    map_coordinates = models.CharField(max_length=100)
    image = models.ImageField(upload_to="cinema/", null=True, blank=True)
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)

    def __str__(self):
        return self.name


class Hall(models.Model):
    cinema = models.ForeignKey(Cinema, on_delete=models.CASCADE)
    name = models.CharField(max_length=100)
    rows = models.IntegerField()
    is_vip = models.BooleanField(default=False)
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)
    map_hall = models.ImageField(upload_to="hall_maps/", null=True, blank=True)

    def __str__(self):
        return f"{self.name} ({self.cinema.name})"


class Movie(models.Model):
    title = models.CharField(max_length=200)
    slug = models.SlugField()
    description = models.TextField()
    poster = models.ImageField(upload_to="posters/", null=True, blank=True)
    trailer_url = models.URLField()
    age_rating = models.CharField(max_length=10)
    release_date = models.DateField()
    is_coming_soon = models.BooleanField(default=False)
    gallery = models.ManyToManyField(Image)
    is_2d = models.BooleanField(default=True)
    is_3d = models.BooleanField(default=False)
    is_imax = models.BooleanField(default=False)
    seo = models.OneToOneField(SeoBlock, on_delete=models.CASCADE)

    def __str__(self):
        return self.title


# booking
from django.db import models
from users.models import User
from cinema.models import Movie, Hall


class Screening(models.Model):
    movie = models.ForeignKey(Movie, on_delete=models.CASCADE)
    hall = models.ForeignKey(Hall, on_delete=models.CASCADE)
    start_time = models.DateTimeField()
    price = models.DecimalField(max_digits=8, decimal_places=2)
    language = models.CharField(max_length=50)
    format = models.CharField(max_length=50)

    def __str__(self):
        return f"{self.movie.title} в {self.hall.name} ({self.start_time})"


class Ticket(models.Model):
    STATUS_CHOICES = [("reserved", "Забронирован"), ("paid", "Оплачен")]

    user = models.ForeignKey(User, on_delete=models.CASCADE)
    screening = models.ForeignKey(Screening, on_delete=models.CASCADE)
    seat_row = models.IntegerField()
    seat_number = models.IntegerField()
    price = models.DecimalField(max_digits=8, decimal_places=2)
    status = models.CharField(max_length=10, choices=STATUS_CHOICES)
    created_at = models.DateTimeField(auto_now_add=True)


# promotion
from django.db import models
from cinema.models import SeoBlock, Image


class PromoNews(models.Model):
    TYPE_CHOICES = [("news", "Новость"), ("promo", "Акция")]

    title = models.CharField(max_length=255)
    slug = models.SlugField()
    type = models.CharField(max_length=10, choices=TYPE_CHOICES)
    image = models.ImageField(upload_to="promo_news/", null=True, blank=True)
    gallery = models.ManyToManyField(Image)
    text = models.TextField()
    start_date = models.DateField(null=True, blank=True)
    end_date = models.DateField(null=True, blank=True)
    published_at = models.DateField(null=True, blank=True)
    is_active = models.BooleanField(default=True)
    seo = models.OneToOneField(
        SeoBlock, on_delete=models.SET_NULL, null=True, blank=True
    )

    def __str__(self):
        return self.title


# users
from django.contrib.auth.models import AbstractUser
from django.db import models


class User(AbstractUser):
    GENDER_CHOICES = [("male", "Мужской"), ("female", "Женский")]
    LANGUAGE_CHOICES = [("ru", "Русский"), ("uk", "Українська")]

    phone_number = models.CharField(max_length=20)
    birth = models.DateField(null=True, blank=True)
    city = models.CharField(max_length=100)
    gender = models.CharField(max_length=10, choices=GENDER_CHOICES)
    language = models.CharField(max_length=2, choices=LANGUAGE_CHOICES)
    card_number = models.CharField(max_length=20)
    nickname = models.CharField(max_length=100)

    def __str__(self):
        return self.nickname or self.username
